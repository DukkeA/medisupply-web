name: PR Environment Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  deploy-pr-environment:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create PR environment
        id: terraform
        working-directory: infrastructure/modules/pr-environment
        run: |
          terraform init
          terraform plan -var="pr_number=${{ github.event.number }}" -out=tfplan
          terraform apply -auto-approve tfplan

          # Get outputs
          BUCKET_NAME=$(terraform output -raw s3_bucket_name)
          WEBSITE_URL=$(terraform output -raw website_url)

          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT
          echo "website_url=$WEBSITE_URL" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        run: |
          aws s3 sync ./out s3://${{ steps.terraform.outputs.bucket_name }} --delete

      - name: Comment PR with deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const websiteUrl = '${{ steps.terraform.outputs.website_url }}';

            const comment = `## 🚀 PR Environment Deployed

            Your pull request has been deployed to a temporary environment:

            **🌐 Preview URL:** ${websiteUrl}

            This environment will be automatically cleaned up after 7 days.

            > Built from commit: ${context.sha.substring(0, 7)}`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.find(comment =>
              comment.body.includes('PR Environment Deployed') &&
              comment.user.type === 'Bot'
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
